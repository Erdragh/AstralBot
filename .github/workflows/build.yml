name: build
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on Linux
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: echo ref
        run: echo ${{github.ref}}

      - name: setup gradle with dependency graph
        if: ${{github.ref == 'refs/heads/main' && github.event_name != 'pull_request'}}
        uses: gradle/gradle-build-action@v2
        # with:
        #   dependency-graph: 'generate-and-submit'

      - name: setup gradle
        if: ${{github.ref != 'refs/heads/main' || github.event_name == 'pull_request'}}
        uses: gradle/gradle-build-action@v2
        # with:
        #   dependency-graph: 'generate-and-upload'

      - name: gradle clean build
        run: ./gradlew clean build

#      - name: Capture Fabric Artifacts
#        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
#        uses: actions/upload-artifact@v3
#        with:
#          name: Fabric Artifacts
#          path: fabric/build/libs
#      - name: Capture Forge Artifacts
#        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
#        uses: actions/upload-artifact@v3
#        with:
#          name: Forge Artifacts
#          path: forge/build/libs